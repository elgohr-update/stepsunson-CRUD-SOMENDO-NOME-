name: BCC Build and tests

on:
  push:
    branches:
      - master
  pull_request:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read # to fetch code (actions/checkout)
  pull-requests: read # to read pull requests (dorny/paths-filter)

jobs:
  test_bcc:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        os: [{distro: "ubuntu", version: "18.04", nick: bionic}, {distro: "ubuntu", version: "20.04", nick: focal}]
        env:
        - TYPE: Debug
          PYTHON_TEST_LOGFILE: critical.log
          RW_ENGINE_ENABLED: ON
        - TYPE: Debug
          PYTHON_TEST_LOGFILE: critical.log
          RW_ENGINE_ENABLED: OFF
        - TYPE: Release
          PYTHON_TEST_LOGFILE: critical.log
          RW_ENGINE_ENABLED: ON
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          docker:
            - 'docker/build/**'
    - name: System info
      run: |
        uname -a
        ip addr
    - name: Pull docker container
      if: steps.changes.outputs.docker == 'false'
      run: |
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os.distro }}-${{ matrix.os.version }}
    - name: Build docker container
      if: steps.changes.outputs.docker == 'true'
      uses: ./.github/actions/build-container
      with:
        os_distro: ${{ matrix.os.distro }}
        os_version: ${{ matrix.os.version }}
        os_nick: ${{ matrix.os.nick }}
    - name: Tag docker container
      run: |
        docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os.distro }}-${{ matrix.os.version }} bcc-docker
    - name: Run bcc build
      env: ${{ matrix.env }}
      run: |
        /bin/bash -c \
                   "docker run --privileged \
                   --pid=host \
                   -v $(pwd):/bcc \
                   -v /sys/kernel/debug:/sys/kernel/debug:rw \
                   -v /lib/modules:/lib/modules:ro \
                   -v /usr/src:/usr/src:ro \
                   -v /usr/include/linux:/usr/include/linux:ro \
                   bcc-docker \
                   /bin/bash -c \
                   'mkdir -p /bcc/build && cd /bcc/build && \
                    cmake -DCMAKE_BUILD_TYPE=${TYPE} -DENABLE_LLVM_NATIVECODEGEN=${RW_ENGINE_ENABLED} .. && make -j9'"
    - name: Run bcc's cc tests
      env: ${{ matrix.env }}
      # tests are wrapped with `script` as a hack to get a TTY as github actions doesn't provide this
      # see https://github.com/actions/runner/issues/241
      run: |
        script -e -c /bin/bash -c \
        "docker run -ti \
                    --