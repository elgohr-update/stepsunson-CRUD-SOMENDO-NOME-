Demonstrations of nfsdist, the Linux eBPF/bcc version.

nfsdist traces NFS reads, writes, opens, and getattr, and summarizes their
latency as a power-of-2 histogram. For example:


./nfsdist.py

Tracing NFS operation latency... Hit Ctrl-C to end.

operation = read
     usecs               : count     distribution
         0 -> 1          : 4        |                                        |
         2 -> 3          : 0        |                                        |
         4 -> 7          : 0        |                                        |
         8 -> 15         : 7107     |**************                          |
        16 -> 31         : 19864    |****************************************|
        32 -> 63         : 1494     |***                                     |
        64 -> 127        : 491      |                                        |
       128 -> 255        : 1810     |***                                     |
       256 -> 511        : 6356     |************                            |
       512 -> 1023       : 4860     |*********                               |
      1024 -> 2047       : 3070     |******                                  |
      2048 -> 4095       : 1853     |***                                     |
      4096 -> 8191       : 921      |*                                       |
      8192 -> 16383      : 122      |                                        |
     16384 -> 32767      : 15       |                                        |
     32768 -> 65535      : 5        |                                        |
     65536 -> 131071     : 2        |                                        |
    131072 -> 262143     : 1        |                                        |

operation = write
     usecs               : count     distribution
         0 -> 1          : 0        |                                        |
         2 -> 3          : 0        |                                        |
         4 -> 7          : 0        |                                        |
         8 -> 15         : 1        |                                        |
        16 -> 31         : 0        |                                        |
        32 -> 63         : 9        |                                        |
        64 -> 127        : 19491    |****************************************|
       128 -> 255        : 3064     |******                                  |
       256 -> 511        : 940      |*                                       |
       512 -> 1023       : 365      |                                        |
      1024 -> 2047       : 312      |                                        |
      2048 -> 4095       : 119      |                                        |
      4096 -> 8191       : 31       |                                 