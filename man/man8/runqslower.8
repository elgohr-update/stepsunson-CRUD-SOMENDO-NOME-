.TH runqslower 8  "2016-02-07" "USER COMMANDS"
.SH NAME
runqslower \- Trace long process scheduling delays.
.SH SYNOPSIS
.B runqslower [\-p PID] [\-t TID] [-P] [min_us]
.SH DESCRIPTION
This measures the time a task spends waiting on a run queue (or equivalent
scheduler data structure) for a turn on-CPU, and shows occurrences of time
exceeding passed threshold. This time should be small, but a task may need
to wait its turn due to CPU load. The higher the CPU load, the longer a task
will generally need to wait its turn.

This tool measures two types of run queue latency:

1. The time from a task being enqueued on a run queue to its context switch
and execution. This traces ttwu_do_wakeup(), wake_up_new_task() ->
finish_task_switch() with either raw tracepoints (if supported) or kprobes
and instruments the run queue latency after a voluntary context switch.

2. The time from when a task was involuntary context switched and still
in the runnable state, to when it next executed. This is instrumented
from finish_task_switch() alone.

The overhead of this tool may become significant for some workloads:
see the OVERHEAD section.

This works by tracing various kernel scheduler functions using dynamic tracing,
an